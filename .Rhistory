'))),
# _ Header ----
shinydashboard::box(
width = 12,
solidHeader = TRUE,
tags$img(src = "DEQ-logo-color-horizontal370x73.png"),
tags$div(span("Satellite Imagery of Cyanobacteria in Oregon Lakes and Reservoirs",
style = "color: black; font-size: 40px"))
,
tags$div(span(HTML(paste0("Last sourced from the ",
a("U.S. EPA CyAN Project",
href="https://www.epa.gov/water-research/cyanobacteria-assessment-network-cyan"),
" on: ",
max(dta$Date))),
style = "color: black; font-size: 20px"))
#tags$br(),
#,
#tags$div(span(HTML(paste0("A Map Application for cyanobacteria blooms from the ",
#                          a("U.S. EPA CyAN Project",
#                            href="https://www.epa.gov/water-research/cyanobacteria-assessment-network-cyan"))),
#              style = "color: black; font-size: 20px")),
#tags$br(),
), # Header box END
# _ Part 1: Mapping data ----
shinydashboardPlus::box(
width = 12,
#title = "Mapping Data",
status = "primary",
solidHeader = FALSE,
collapsible = FALSE,
collapsed = FALSE,
#dropdownMenu = boxDropdown(),
shinydashboard::box(
width = 3,
#title = "date_and_waterbody",
solidHeader = TRUE,
# __ Select a Date ----
#tags$style(HTML(".datepicker {z-index:99999 !important;}")),
shiny::dateInput(inputId = "date_map",
label = tags$h4("Select a Date:"),
value = max(dta$Date),
min = min(dta$Date),
max = max(dta$Date),
format = "yyyy-mm-dd",
startview = "month",
weekstart = 0,
datesdisabled = missing.dates$Date),
# __ Max 7D Means ----
uiOutput("top10"),
#tags$hr(),
# __ Select a Basin ----
shinyWidgets::pickerInput(inputId = "basin",
label = tags$h4("Select a Basin:"),
choices = list(
"Oregon",
"HUC6 Basin" = unique(sort(huc6@data$HU_6_NAME))
),
multiple = FALSE),
#tags$hr(),
# __ Select a Waterbody ----
shinyWidgets::pickerInput(inputId = "waterbody",
label = tags$h4("Select a Waterbody:"),
choices = list(
"Oregon",
"Waterbody Name_GNISID" = unique(sort(lakes.resolvable$GNISIDNAME))
source("//deqhq1/WQ-Share/Harmful Algal Blooms Coordination Team/HAB_Shiny_app/data.R")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
